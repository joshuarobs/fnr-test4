name: Server Cleanup

on:
  workflow_dispatch:
    inputs:
      confirm_cleanup:
        description: 'Type "CLEANUP" to confirm server reset (this will delete all data)'
        required: true
        type: string

jobs:
  cleanup:
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm_cleanup == 'CLEANUP'

    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.DO_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.DROPLET_IP }} >> ~/.ssh/known_hosts

      - name: Stop Services
        run: |
          ssh root@${{ secrets.DROPLET_IP }} << 'ENDSSH'
          echo "üõë Stopping all services..."
          pm2 delete all || true
          systemctl stop postgresql || true
          systemctl stop nginx || true
          ENDSSH

      - name: Clean PostgreSQL
        run: |
          ssh root@${{ secrets.DROPLET_IP }} << 'ENDSSH'
          echo "üóëÔ∏è Removing PostgreSQL..."
          apt-get remove --purge -y postgresql postgresql-*
          apt-get autoremove -y
          rm -rf /var/lib/postgresql/
          rm -rf /var/log/postgresql/
          rm -rf /etc/postgresql/
          ENDSSH

      - name: Clean Application
        run: |
          ssh root@${{ secrets.DROPLET_IP }} << 'ENDSSH'
          echo "üóëÔ∏è Removing application files..."
          rm -rf /var/www/fnr-app
          rm -rf /var/backups/app
          rm -rf /var/backups/db
          rm -rf /root/.pm2
          rm -rf /tmp/deploy
          ENDSSH

      - name: Clean Environment Variables
        run: |
          ssh root@${{ secrets.DROPLET_IP }} << 'ENDSSH'
          echo "üßπ Cleaning environment variables..."
          # Remove from /etc/environment
          sed -i '/NODE_ENV=/d' /etc/environment

          # Remove from ~/.bashrc
          sed -i '/export NODE_ENV=/d' ~/.bashrc

          # Clean secure cookie settings from .env
          if [ -f "/var/www/fnr-app/.env" ]; then
            sed -i '/COOKIE_SECURE=/d' /var/www/fnr-app/.env
            sed -i '/COOKIE_SAME_SITE=/d' /var/www/fnr-app/.env
          fi

          # Source updated files
          source /etc/environment || true
          source ~/.bashrc || true
          ENDSSH

      - name: Clean Node.js
        run: |
          ssh root@${{ secrets.DROPLET_IP }} << 'ENDSSH'
          echo "üóëÔ∏è Removing Node.js..."
          npm uninstall -g pm2
          apt-get remove --purge -y nodejs
          rm -rf /etc/apt/sources.list.d/nodesource.list
          ENDSSH

      - name: Clean Nginx and SSL
        run: |
          ssh root@${{ secrets.DROPLET_IP }} << 'ENDSSH'
          echo "üóëÔ∏è Removing Nginx configuration and SSL certificates..."
          # Remove Nginx configuration files
          rm -f /etc/nginx/sites-enabled/fnr-app
          rm -f /etc/nginx/sites-available/fnr-app
          rm -f /var/log/nginx/fnr-access.log
          rm -f /var/log/nginx/fnr-error.log

          # Remove SSL certificates
          rm -f /etc/nginx/ssl/fnr-app.crt
          rm -f /etc/nginx/ssl/fnr-app.key
          rm -rf /etc/nginx/ssl

          # Remove Nginx completely
          apt-get remove --purge -y nginx nginx-*
          apt-get autoremove -y
          rm -rf /etc/nginx
          ENDSSH

      - name: Verify Cleanup
        run: |
          ssh root@${{ secrets.DROPLET_IP }} << 'ENDSSH'
          echo "üîç Verifying cleanup..."

          echo "Checking PostgreSQL..."
          if dpkg -l | grep -q postgresql; then
            echo "‚ùå PostgreSQL still installed"
            exit 1
          fi

          echo "Checking Node.js..."
          if command -v node &> /dev/null; then
            echo "‚ùå Node.js still installed"
            exit 1
          fi

          echo "Checking PM2..."
          if command -v pm2 &> /dev/null; then
            echo "‚ùå PM2 still installed"
            exit 1
          fi

          echo "Checking directories..."
          for dir in "/var/www/fnr-app" "/var/backups/app" "/var/backups/db" "/var/lib/postgresql" "/tmp/deploy"; do
            if [ -d "$dir" ]; then
              echo "‚ùå Directory still exists: $dir"
              exit 1
            fi
          done

          echo "‚úÖ Cleanup verified successfully"

          # Verify environment variables cleanup
          if grep -q "NODE_ENV=" /etc/environment; then
            echo "‚ùå NODE_ENV still exists in /etc/environment"
            exit 1
          fi

          if grep -q "export NODE_ENV=" ~/.bashrc; then
            echo "‚ùå NODE_ENV still exists in ~/.bashrc"
            exit 1
          fi

          # Verify secure cookie settings cleanup
          if [ -f "/var/www/fnr-app/.env" ]; then
            if grep -q "COOKIE_SECURE=" /var/www/fnr-app/.env; then
              echo "‚ùå COOKIE_SECURE still exists in .env"
              exit 1
            fi
            if grep -q "COOKIE_SAME_SITE=" /var/www/fnr-app/.env; then
              echo "‚ùå COOKIE_SAME_SITE still exists in .env"
              exit 1
            fi
          fi

          echo "‚úÖ Environment cleanup verified successfully"

          echo "Checking Nginx and SSL..."
          if dpkg -l | grep -q nginx; then
            echo "‚ùå Nginx still installed"
            exit 1
          fi
          if [ -f "/etc/nginx/sites-enabled/fnr-app" ] || [ -f "/etc/nginx/sites-available/fnr-app" ]; then
            echo "‚ùå Nginx configuration files still exist"
            exit 1
          fi
          if [ -d "/etc/nginx/ssl" ] || [ -f "/etc/nginx/ssl/fnr-app.crt" ] || [ -f "/etc/nginx/ssl/fnr-app.key" ]; then
            echo "‚ùå SSL certificate files still exist"
            exit 1
          fi
          ENDSSH

      - name: Final Message
        run: |
          echo "üßπ Server cleanup completed successfully"
          echo "üëâ Run the 'Server Setup' workflow to reinstall everything"
